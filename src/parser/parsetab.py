
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVnonassocGRLSGREQLSEQEQEQAND BLOCKE BLOCKS BRC BRO CLASS COMMA DIV DOT EQ EQEQ GR GREQ ID IF IN INN LS LSEQ MINUS MULT NEW NOT NUMBER OR PLUS PRIVATE PUBLIC SEMICOLON STRING TYPE VAR WHILE WRITE WRITEN program : statement\n                    | program statement\n        io : WRITE BRO expression BRC SEMICOLON\n              | WRITEN BRO expression BRC SEMICOLON\n              | IN BRO ID BRC SEMICOLON\n              | INN BRO ID BRC SEMICOLON\n        \n        statement : declaration\n                  | condition\n                  | cycle\n                  | expression SEMICOLON\n                  | io\n                  | assign\n                  | class_declaration\n        declaration : VAR ID EQ expression SEMICOLON\n                       | VAR ID SEMICOLON\n        assign : ID EQ expression SEMICOLONexpression : expression PLUS expression\n                      | expression MINUS expression\n                      | expression MULT expression\n                      | expression DIV expression\n                      | expression EQEQ expression\n                      | expression GREQ expression\n                      | expression LSEQ expression\n                      | expression LS expression\n                      | expression GR expression\n                      | expression AND expression\n                      | expression OR expression\n                      | NUMBER\n                      | ID\n                      | STRING\n                      | BRO expression BRC\n                      | NOT BRO expression BRC\n        condition : IF BRO expression BRC BLOCKS program BLOCKEcycle : WHILE BRO expression BRC BLOCKS program BLOCKEclass_declaration : CLASS ID BLOCKS class_body BLOCKEclass_body :\n                      | class_member\n                      | class_body class_member\n        class_member : access_specifier declaration SEMICOLON\n                        | access_specifier function SEMICOLONaccess_specifier : PUBLIC\n                            | PRIVATE\n        expression : NEW ID BRO BRCexpression : expression DOT IDexpression : expression DOT ID BRO args BRCargs :\n                | expression\n                | args COMMA expressionfunction : TYPE ID BRO args BRC BLOCKS program BLOCKEdeclaration : TYPE ID EQ expression SEMICOLON'
    
_lr_action_items = {'VAR':([0,1,2,3,4,5,7,8,9,25,26,66,81,93,94,95,98,99,100,101,102,103,104,105,106,113,114,119,120,124,125,],[10,10,-1,-7,-8,-9,-11,-12,-13,-2,-10,-15,-16,10,-41,-42,-14,-50,10,10,-3,-4,-5,-6,-35,10,10,-33,-34,10,10,]),'TYPE':([0,1,2,3,4,5,7,8,9,25,26,66,81,93,94,95,98,99,100,101,102,103,104,105,106,113,114,119,120,124,125,],[12,12,-1,-7,-8,-9,-11,-12,-13,-2,-10,-15,-16,110,-41,-42,-14,-50,12,12,-3,-4,-5,-6,-35,12,12,-33,-34,12,12,]),'IF':([0,1,2,3,4,5,7,8,9,25,26,66,81,98,99,100,101,102,103,104,105,106,113,114,119,120,124,125,],[13,13,-1,-7,-8,-9,-11,-12,-13,-2,-10,-15,-16,-14,-50,13,13,-3,-4,-5,-6,-35,13,13,-33,-34,13,13,]),'WHILE':([0,1,2,3,4,5,7,8,9,25,26,66,81,98,99,100,101,102,103,104,105,106,113,114,119,120,124,125,],[15,15,-1,-7,-8,-9,-11,-12,-13,-2,-10,-15,-16,-14,-50,15,15,-3,-4,-5,-6,-35,15,15,-33,-34,15,15,]),'NUMBER':([0,1,2,3,4,5,7,8,9,14,25,26,27,28,29,30,31,32,33,34,35,36,37,40,42,45,46,48,49,65,66,68,79,81,98,99,100,101,102,103,104,105,106,112,113,114,119,120,121,124,125,],[16,16,-1,-7,-8,-9,-11,-12,-13,16,-2,-10,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-15,16,16,-16,-14,-50,16,16,-3,-4,-5,-6,-35,16,16,16,-33,-34,16,16,16,]),'ID':([0,1,2,3,4,5,7,8,9,10,12,14,19,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,42,45,46,48,49,50,51,65,66,68,79,81,98,99,100,101,102,103,104,105,106,110,112,113,114,119,120,121,124,125,],[11,11,-1,-7,-8,-9,-11,-12,-13,39,41,44,47,52,-2,-10,44,44,44,44,44,44,44,44,44,44,44,64,44,44,44,44,44,44,76,77,44,-15,44,44,-16,-14,-50,11,11,-3,-4,-5,-6,-35,117,44,11,11,-33,-34,44,11,11,]),'STRING':([0,1,2,3,4,5,7,8,9,14,25,26,27,28,29,30,31,32,33,34,35,36,37,40,42,45,46,48,49,65,66,68,79,81,98,99,100,101,102,103,104,105,106,112,113,114,119,120,121,124,125,],[17,17,-1,-7,-8,-9,-11,-12,-13,17,-2,-10,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-15,17,17,-16,-14,-50,17,17,-3,-4,-5,-6,-35,17,17,17,-33,-34,17,17,17,]),'BRO':([0,1,2,3,4,5,7,8,9,13,14,15,18,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,40,42,45,46,47,48,49,64,65,66,68,79,81,98,99,100,101,102,103,104,105,106,112,113,114,117,119,120,121,124,125,],[14,14,-1,-7,-8,-9,-11,-12,-13,42,14,45,46,48,49,50,51,-2,-10,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,73,14,14,79,14,-15,14,14,-16,-14,-50,14,14,-3,-4,-5,-6,-35,14,14,14,121,-33,-34,14,14,14,]),'NOT':([0,1,2,3,4,5,7,8,9,14,25,26,27,28,29,30,31,32,33,34,35,36,37,40,42,45,46,48,49,65,66,68,79,81,98,99,100,101,102,103,104,105,106,112,113,114,119,120,121,124,125,],[18,18,-1,-7,-8,-9,-11,-12,-13,18,-2,-10,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-15,18,18,-16,-14,-50,18,18,-3,-4,-5,-6,-35,18,18,18,-33,-34,18,18,18,]),'NEW':([0,1,2,3,4,5,7,8,9,14,25,26,27,28,29,30,31,32,33,34,35,36,37,40,42,45,46,48,49,65,66,68,79,81,98,99,100,101,102,103,104,105,106,112,113,114,119,120,121,124,125,],[19,19,-1,-7,-8,-9,-11,-12,-13,19,-2,-10,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-15,19,19,-16,-14,-50,19,19,-3,-4,-5,-6,-35,19,19,19,-33,-34,19,19,19,]),'WRITE':([0,1,2,3,4,5,7,8,9,25,26,66,81,98,99,100,101,102,103,104,105,106,113,114,119,120,124,125,],[20,20,-1,-7,-8,-9,-11,-12,-13,-2,-10,-15,-16,-14,-50,20,20,-3,-4,-5,-6,-35,20,20,-33,-34,20,20,]),'WRITEN':([0,1,2,3,4,5,7,8,9,25,26,66,81,98,99,100,101,102,103,104,105,106,113,114,119,120,124,125,],[21,21,-1,-7,-8,-9,-11,-12,-13,-2,-10,-15,-16,-14,-50,21,21,-3,-4,-5,-6,-35,21,21,-33,-34,21,21,]),'IN':([0,1,2,3,4,5,7,8,9,25,26,66,81,98,99,100,101,102,103,104,105,106,113,114,119,120,124,125,],[22,22,-1,-7,-8,-9,-11,-12,-13,-2,-10,-15,-16,-14,-50,22,22,-3,-4,-5,-6,-35,22,22,-33,-34,22,22,]),'INN':([0,1,2,3,4,5,7,8,9,25,26,66,81,98,99,100,101,102,103,104,105,106,113,114,119,120,124,125,],[23,23,-1,-7,-8,-9,-11,-12,-13,-2,-10,-15,-16,-14,-50,23,23,-3,-4,-5,-6,-35,23,23,-33,-34,23,23,]),'CLASS':([0,1,2,3,4,5,7,8,9,25,26,66,81,98,99,100,101,102,103,104,105,106,113,114,119,120,124,125,],[24,24,-1,-7,-8,-9,-11,-12,-13,-2,-10,-15,-16,-14,-50,24,24,-3,-4,-5,-6,-35,24,24,-33,-34,24,24,]),'$end':([1,2,3,4,5,7,8,9,25,26,66,81,98,99,102,103,104,105,106,119,120,],[0,-1,-7,-8,-9,-11,-12,-13,-2,-10,-15,-16,-14,-50,-3,-4,-5,-6,-35,-33,-34,]),'BLOCKE':([2,3,4,5,7,8,9,25,26,66,78,81,91,92,98,99,102,103,104,105,106,107,113,114,115,116,119,120,125,],[-1,-7,-8,-9,-11,-12,-13,-2,-10,-15,-36,-16,106,-37,-14,-50,-3,-4,-5,-6,-35,-38,119,120,-39,-40,-33,-34,126,]),'SEMICOLON':([6,11,16,17,39,44,53,54,55,56,57,58,59,60,61,62,63,64,66,67,70,80,82,85,86,87,88,89,90,98,99,108,109,111,126,],[26,-29,-28,-30,66,-29,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-44,-15,81,-31,98,99,-32,-43,102,103,104,105,-14,-50,115,116,-45,-49,]),'PLUS':([6,11,16,17,43,44,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,74,75,80,82,85,86,96,111,118,],[27,-29,-28,-30,27,-29,-17,-18,-19,-20,-21,-22,-23,-24,-25,27,27,-44,27,27,-31,27,27,27,27,27,27,-32,-43,27,-45,27,]),'MINUS':([6,11,16,17,43,44,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,74,75,80,82,85,86,96,111,118,],[28,-29,-28,-30,28,-29,-17,-18,-19,-20,-21,-22,-23,-24,-25,28,28,-44,28,28,-31,28,28,28,28,28,28,-32,-43,28,-45,28,]),'MULT':([6,11,16,17,43,44,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,74,75,80,82,85,86,96,111,118,],[29,-29,-28,-30,29,-29,29,29,-19,-20,-21,-22,-23,-24,-25,29,29,-44,29,29,-31,29,29,29,29,29,29,-32,-43,29,-45,29,]),'DIV':([6,11,16,17,43,44,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,74,75,80,82,85,86,96,111,118,],[30,-29,-28,-30,30,-29,30,30,-19,-20,-21,-22,-23,-24,-25,30,30,-44,30,30,-31,30,30,30,30,30,30,-32,-43,30,-45,30,]),'EQEQ':([6,11,16,17,43,44,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,74,75,80,82,85,86,96,111,118,],[31,-29,-28,-30,31,-29,31,31,31,31,None,None,None,None,None,31,31,-44,31,31,-31,31,31,31,31,31,31,-32,-43,31,-45,31,]),'GREQ':([6,11,16,17,43,44,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,74,75,80,82,85,86,96,111,118,],[32,-29,-28,-30,32,-29,32,32,32,32,None,None,None,None,None,32,32,-44,32,32,-31,32,32,32,32,32,32,-32,-43,32,-45,32,]),'LSEQ':([6,11,16,17,43,44,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,74,75,80,82,85,86,96,111,118,],[33,-29,-28,-30,33,-29,33,33,33,33,None,None,None,None,None,33,33,-44,33,33,-31,33,33,33,33,33,33,-32,-43,33,-45,33,]),'LS':([6,11,16,17,43,44,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,74,75,80,82,85,86,96,111,118,],[34,-29,-28,-30,34,-29,34,34,34,34,None,None,None,None,None,34,34,-44,34,34,-31,34,34,34,34,34,34,-32,-43,34,-45,34,]),'GR':([6,11,16,17,43,44,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,74,75,80,82,85,86,96,111,118,],[35,-29,-28,-30,35,-29,35,35,35,35,None,None,None,None,None,35,35,-44,35,35,-31,35,35,35,35,35,35,-32,-43,35,-45,35,]),'AND':([6,11,16,17,43,44,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,74,75,80,82,85,86,96,111,118,],[36,-29,-28,-30,36,-29,-17,-18,-19,-20,-21,-22,-23,-24,-25,36,36,-44,36,36,-31,36,36,36,36,36,36,-32,-43,36,-45,36,]),'OR':([6,11,16,17,43,44,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,74,75,80,82,85,86,96,111,118,],[37,-29,-28,-30,37,-29,-17,-18,-19,-20,-21,-22,-23,-24,-25,37,37,-44,37,37,-31,37,37,37,37,37,37,-32,-43,37,-45,37,]),'DOT':([6,11,16,17,43,44,53,54,55,56,57,58,59,60,61,62,63,64,67,69,70,71,72,74,75,80,82,85,86,96,111,118,],[38,-29,-28,-30,38,-29,-17,-18,-19,-20,-21,-22,-23,-24,-25,38,38,-44,38,38,-31,38,38,38,38,38,38,-32,-43,38,-45,38,]),'EQ':([11,39,41,117,],[40,65,68,68,]),'BRC':([16,17,43,44,53,54,55,56,57,58,59,60,61,62,63,64,69,70,71,72,73,74,75,76,77,79,85,86,96,97,111,118,121,122,],[-28,-30,70,-29,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-44,83,-31,84,85,86,87,88,89,90,-46,-32,-43,-47,111,-45,-48,-46,123,]),'COMMA':([16,17,44,53,54,55,56,57,58,59,60,61,62,63,64,70,79,85,86,96,97,111,118,121,122,],[-28,-30,-29,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-44,-31,-46,-32,-43,-47,112,-45,-48,-46,112,]),'BLOCKS':([52,83,84,123,],[78,100,101,124,]),'PUBLIC':([78,91,92,107,115,116,],[94,94,-37,-38,-39,-40,]),'PRIVATE':([78,91,92,107,115,116,],[95,95,-37,-38,-39,-40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,100,101,124,],[1,113,114,125,]),'statement':([0,1,100,101,113,114,124,125,],[2,25,2,2,25,25,2,25,]),'declaration':([0,1,93,100,101,113,114,124,125,],[3,3,108,3,3,3,3,3,3,]),'condition':([0,1,100,101,113,114,124,125,],[4,4,4,4,4,4,4,4,]),'cycle':([0,1,100,101,113,114,124,125,],[5,5,5,5,5,5,5,5,]),'expression':([0,1,14,27,28,29,30,31,32,33,34,35,36,37,40,42,45,46,48,49,65,68,79,100,101,112,113,114,121,124,125,],[6,6,43,53,54,55,56,57,58,59,60,61,62,63,67,69,71,72,74,75,80,82,96,6,6,118,6,6,96,6,6,]),'io':([0,1,100,101,113,114,124,125,],[7,7,7,7,7,7,7,7,]),'assign':([0,1,100,101,113,114,124,125,],[8,8,8,8,8,8,8,8,]),'class_declaration':([0,1,100,101,113,114,124,125,],[9,9,9,9,9,9,9,9,]),'class_body':([78,],[91,]),'class_member':([78,91,],[92,107,]),'access_specifier':([78,91,],[93,93,]),'args':([79,121,],[97,122,]),'function':([93,],[109,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_program','parser.py',26),
  ('program -> program statement','program',2,'p_program','parser.py',27),
  ('io -> WRITE BRO expression BRC SEMICOLON','io',5,'p_io','parser.py',36),
  ('io -> WRITEN BRO expression BRC SEMICOLON','io',5,'p_io','parser.py',37),
  ('io -> IN BRO ID BRC SEMICOLON','io',5,'p_io','parser.py',38),
  ('io -> INN BRO ID BRC SEMICOLON','io',5,'p_io','parser.py',39),
  ('statement -> declaration','statement',1,'p_statement','parser.py',45),
  ('statement -> condition','statement',1,'p_statement','parser.py',46),
  ('statement -> cycle','statement',1,'p_statement','parser.py',47),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','parser.py',48),
  ('statement -> io','statement',1,'p_statement','parser.py',49),
  ('statement -> assign','statement',1,'p_statement','parser.py',50),
  ('statement -> class_declaration','statement',1,'p_statement','parser.py',51),
  ('declaration -> VAR ID EQ expression SEMICOLON','declaration',5,'p_declaration','parser.py',56),
  ('declaration -> VAR ID SEMICOLON','declaration',3,'p_declaration','parser.py',57),
  ('assign -> ID EQ expression SEMICOLON','assign',4,'p_assign','parser.py',65),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',69),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',70),
  ('expression -> expression MULT expression','expression',3,'p_expression','parser.py',71),
  ('expression -> expression DIV expression','expression',3,'p_expression','parser.py',72),
  ('expression -> expression EQEQ expression','expression',3,'p_expression','parser.py',73),
  ('expression -> expression GREQ expression','expression',3,'p_expression','parser.py',74),
  ('expression -> expression LSEQ expression','expression',3,'p_expression','parser.py',75),
  ('expression -> expression LS expression','expression',3,'p_expression','parser.py',76),
  ('expression -> expression GR expression','expression',3,'p_expression','parser.py',77),
  ('expression -> expression AND expression','expression',3,'p_expression','parser.py',78),
  ('expression -> expression OR expression','expression',3,'p_expression','parser.py',79),
  ('expression -> NUMBER','expression',1,'p_expression','parser.py',80),
  ('expression -> ID','expression',1,'p_expression','parser.py',81),
  ('expression -> STRING','expression',1,'p_expression','parser.py',82),
  ('expression -> BRO expression BRC','expression',3,'p_expression','parser.py',83),
  ('expression -> NOT BRO expression BRC','expression',4,'p_expression','parser.py',84),
  ('condition -> IF BRO expression BRC BLOCKS program BLOCKE','condition',7,'p_condition','parser.py',96),
  ('cycle -> WHILE BRO expression BRC BLOCKS program BLOCKE','cycle',7,'p_cycle','parser.py',101),
  ('class_declaration -> CLASS ID BLOCKS class_body BLOCKE','class_declaration',5,'p_class','parser.py',106),
  ('class_body -> <empty>','class_body',0,'p_class_body','parser.py',110),
  ('class_body -> class_member','class_body',1,'p_class_body','parser.py',111),
  ('class_body -> class_body class_member','class_body',2,'p_class_body','parser.py',112),
  ('class_member -> access_specifier declaration SEMICOLON','class_member',3,'p_class_member','parser.py',122),
  ('class_member -> access_specifier function SEMICOLON','class_member',3,'p_class_member','parser.py',123),
  ('access_specifier -> PUBLIC','access_specifier',1,'p_access_specifier','parser.py',127),
  ('access_specifier -> PRIVATE','access_specifier',1,'p_access_specifier','parser.py',128),
  ('expression -> NEW ID BRO BRC','expression',4,'p_expression_new','parser.py',133),
  ('expression -> expression DOT ID','expression',3,'p_expression_dot_access','parser.py',137),
  ('expression -> expression DOT ID BRO args BRC','expression',6,'p_expression_method_call','parser.py',141),
  ('args -> <empty>','args',0,'p_args','parser.py',145),
  ('args -> expression','args',1,'p_args','parser.py',146),
  ('args -> args COMMA expression','args',3,'p_args','parser.py',147),
  ('function -> TYPE ID BRO args BRC BLOCKS program BLOCKE','function',8,'p_function','parser.py',156),
  ('declaration -> TYPE ID EQ expression SEMICOLON','declaration',5,'p_typed_declaration','parser.py',160),
]
